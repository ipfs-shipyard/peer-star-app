#!/usr/bin/env node
/* eslint no-console: "off" */
'use strict'

const defaultName = 'peer-pad/2'
const defaultSwarmAddress = '/dns4/ws-star1.par.dwebops.pub/tcp/443/wss/p2p-websocket-star'

const config = {
  name: process.env.PEER_STAR_APP_NAME || defaultName,
  swarmAddress: process.env.PEER_STAR_SWARM_ADDRESS || defaultSwarmAddress
}

const createPinner = require('../src').createPinner

const options = {}

if (config.swarmAddress) {
  console.log('using swarm address %j', config.swarmAddress)
  options.ipfs = {
    swarm: [config.swarmAddress]
  }
}

console.log('pinning app %s', config.name)

process.on('unhandledRejection', (err) => {
  console.error(err)
})

const pinner = createPinner(config.name, options)

pinner.start().then(() => {
  if (!process.browser) {
    startHealthEndpointServer()
  }
})

function startHealthEndpointServer () {
  const url = require('url')

  return new Promise((resolve, reject) => {
    let started = false

    const server = require('http').createServer(onRequest)
    const port = process.env.PORT || 3000
    server.once('error', () => {
      if (!started) {
        reject(err)
      }
    })
    server.listen(port, () => {
      console.log('Health endpoint listening on port', port)
      started = true
      resolve()
    })
  })

  function onRequest(request, response) {
    const { pathname } = url.parse(request.url)
    switch (pathname) {
      case '/health':
        response.end('OK')
        break
      default:
        response.writeHead(404)
        response.end('Not found')
    }
  }
}
